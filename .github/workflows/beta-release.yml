name: Release

on:
  push:
    branches:
      - 'beta/*'
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        node-version: [18.x]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - uses: pnpm/action-setup@v2
      with:
        version: 8.6.0

    - name: Rust setup
      uses: dtolnay/rust-toolchain@stable

    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Sync node version and setup cache
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Next cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
        
    - name: Install frontend dependencies
      run: pnpm install
    
    - name: Create a release and uploading
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NEXT_PUBLIC_GITHUB_AUTH_TOKEN: ${{ secrets.NEXT_PUBLIC_GITHUB_AUTH_TOKEN }}
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        TRACKING_ID: ${{ secrets.TRACKING_ID }}
      with:
        tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
        releaseName: 'TOTK mod manager beta after __VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
        prerelease: true
        releaseDraft: false
        includeUpdaterJson: false

    - name: Release
      uses: softprops/action-gh-release@v1
      if: matrix.platform == 'windows-latest'
      with:
        files: src-tauri/target/release/Zelda Tears of the Kingdom Mod Manager.exe